PROJECT(ivf)

SET( LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib )
SET( EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin )
SET( FREETYPE_INCLUDE /usr/include/freetype2 )

IF(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
	SET(IVFDEBUG ON)
ELSE(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
	SET(IVFDEBUG OFF)
ENDIF(${CMAKE_BUILD_TYPE} STREQUAL "Debug")

IF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	SET(IVFWIN32 ON)
ELSE(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	SET(IVFWIN32 OFF)
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")

IF(IVFWIN32)
	MESSAGE( "Ivf++ Windows build" )
ELSE(IVFWIN32)
	MESSAGE( "Ivf++ Linux build")
ENDIF(IVFWIN32)

IF(IVFDEBUG)
	MESSAGE( "Debug information on" )
ELSE(IVFDEBUG)
	MESSAGE( "Debug information off" )
ENDIF(IVFDEBUG)

IF(BUILD_SHARED_LIBS)
	MESSAGE( "Building shared libraries." )
ELSE(BUILD_SHARED_LIBS)
	MESSAGE( "Building static libraries." )
ENDIF(BUILD_SHARED_LIBS)

IF(IVFWIN32)
    IF(IVFDEBUG)
		STRING(REPLACE "/Zi" "/Z7" CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
		STRING(REPLACE "/Zi" "/Z7" CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
#		STRING(REPLACE "/PDB:<TARGET_PDB>" "" CMAKE_CXX_CREATE_SHARED_LIBRARY ${CMAKE_CXX_CREATE_SHARED_LIBRARY})
#		STRING(REPLACE "/Fd<TARGET_PDB>" "" CMAKE_CXX_LINK_EXECUTABLE ${CMAKE_CXX_LINK_EXECUTABLE})
#		STRING(REPLACE "/PDB:<TARGET_PDB>" "" CMAKE_C_CREATE_SHARED_LIBRARY ${CMAKE_C_CREATE_SHARED_LIBRARY})
#		STRING(REPLACE "/Fd<TARGET_PDB>" "" CMAKE_C_LINK_EXECUTABLE ${CMAKE_C_LINK_EXECUTABLE})
    ENDIF(IVFDEBUG)
ENDIF(IVFWIN32)

MACRO(IVFAPP_SETUP)
	IF(IVFWIN32)
		INCLUDE_DIRECTORIES(${ivf_SOURCE_DIR}/include)
	ELSE(IVFWIN32)
		INCLUDE_DIRECTORIES(${ivf_SOURCE_DIR}/include ${FREETYPE_INCLUDE})
	ENDIF(IVFWIN32)

	FILE(GLOB SOURCE_FILES *.cpp)
	FILE(GLOB INCLUDE_FILES *.h)

	SET(EXT_LIBS "")
	SET(EXT_DEBUG_LIBS "")

	IF(BUILD_SHARED_LIBS)
		IF(IVFWIN32)
			ADD_DEFINITIONS(-DIVF_DLL -DFL_DLL)
		ENDIF(IVFWIN32)
	ELSE(BUILD_SHARED_LIBS)
		IF(IVFWIN32)
			SET(EXT_DEBUG_LIBS fltkd fltkgld)
			SET(EXT_LIBS fltk fltkgl)
		ELSE(IVFWIN32)
			SET(EXT_LIBS fltk fltk_gl)
		ENDIF(IVFWIN32)
	ENDIF(BUILD_SHARED_LIBS)

	IF(IVFWIN32)
		IF(IVFDEBUG)
			ADD_EXECUTABLE( ${IVFAPP_NAME}d ${SOURCE_FILES} ${INCLUDE_FILES})
			TARGET_LINK_LIBRARIES( ${IVFAPP_NAME}d ${IVFAPP_DEBUG_LIBS} ${EXT_DEBUG_LIBS})
			INSTALL_TARGETS( /bin ${IVFAPP_NAME}d )
		ELSE(IVFDEBUG)
			ADD_EXECUTABLE(${IVFAPP_NAME} ${SOURCE_FILES} ${INCLUDE_FILES})
			TARGET_LINK_LIBRARIES( ${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS})
			INSTALL_TARGETS( /bin ${IVFAPP_NAME} )
		ENDIF(IVFDEBUG)		
	ELSE(IVFWIN32)
		ADD_EXECUTABLE(${IVFAPP_NAME} ${SOURCE_FILES})
		TARGET_LINK_LIBRARIES(${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS}) 
		INSTALL_TARGETS( /bin ${IVFAPP_NAME} )
	ENDIF(IVFWIN32)

ENDMACRO(IVFAPP_SETUP)

MACRO(IVFCONAPP_SETUP)
        IF(IVFWIN32)
                INCLUDE_DIRECTORIES(${ivf_SOURCE_DIR}/include)
        ELSE(IVFWIN32)
                INCLUDE_DIRECTORIES(${ivf_SOURCE_DIR}/include
${FREETYPE_INCLUDE})
        ENDIF(IVFWIN32)

        FILE(GLOB SOURCE_FILES *.cpp)
        FILE(GLOB INCLUDE_FILES *.h)

        SET(EXT_LIBS "")
        SET(EXT_DEBUG_LIBS "")

        IF(BUILD_SHARED_LIBS)
                IF(IVFWIN32)
                        ADD_DEFINITIONS(-DIVF_DLL -DFL_DLL)
                ENDIF(IVFWIN32)
        ELSE(BUILD_SHARED_LIBS)
                IF(IVFWIN32)
                        SET(EXT_DEBUG_LIBS fltkd fltkgld)
                        SET(EXT_LIBS fltk fltkgl)
                ELSE(IVFWIN32)
                        SET(EXT_LIBS)
                ENDIF(IVFWIN32)
        ENDIF(BUILD_SHARED_LIBS)

        IF(IVFWIN32)
                IF(IVFDEBUG)
                        ADD_EXECUTABLE( ${IVFAPP_NAME}d ${SOURCE_FILES} ${INCLUDE_FILES})
                        TARGET_LINK_LIBRARIES( ${IVFAPP_NAME}d ${IVFAPP_DEBUG_LIBS} ${EXT_DEBUG_LIBS})
                        INSTALL_TARGETS( /bin ${IVFAPP_NAME}d )
                ELSE(IVFDEBUG)
                        ADD_EXECUTABLE(${IVFAPP_NAME} ${SOURCE_FILES} ${INCLUDE_FILES})
                        TARGET_LINK_LIBRARIES( ${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS})
                        INSTALL_TARGETS( /bin ${IVFAPP_NAME} )
                ENDIF(IVFDEBUG)
        ELSE(IVFWIN32)
                ADD_EXECUTABLE(${IVFAPP_NAME} ${SOURCE_FILES})
                TARGET_LINK_LIBRARIES(${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS})
                INSTALL_TARGETS( /bin ${IVFAPP_NAME} )
        ENDIF(IVFWIN32)

ENDMACRO(IVFCONAPP_SETUP)

SUBDIRS(src include examples utils)
