project(ivf)

cmake_minimum_required(VERSION 2.6)

set( LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib )
set( EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin )

if(APPLE)
set( FREETYPE_INCLUDE /usr/X11/include/freetype2 )
set( FREETYPE_CONFIG /usr/X11/include )
set( FREETYPE_LIBS /usr/X11/lib )
else(APPLE)
set( FREETYPE_INCLUDE /usr/include/freetype2 )
endif(APPLE)

if( ${CMAKE_BUILD_TYPE} STREQUAL "Debug" )
	set(IVFDEBUG on)
else( ${CMAKE_BUILD_TYPE} STREQUAL "Debug" )
	set(IVFDEBUG off)
endif( ${CMAKE_BUILD_TYPE} STREQUAL "Debug" )

if(WIN32)
	message( "ivf++ windows build" )
else(WIN32)
	if(APPLE)
		message("Max OS X build")
	else(APPLE)
		message( "ivf++ linux build")
	endif(APPLE)
endif(WIN32)

if(IVFDEBUG)
	message( "debug information on" )
else(IVFDEBUG)
	message( "debug information off" )
endif(IVFDEBUG)

if(BUILD_SHARED_LIBS)
	message( "building shared libraries." )
else(BUILD_SHARED_LIBS)
	message( "building static libraries." )
endif(BUILD_SHARED_LIBS)

if(WIN32)
    if(IVFDEBUG)
		string(REPLACE "/zi" "/z7" CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
		string(REPLACE "/zi" "/z7" CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
    endif(IVFDEBUG)
endif(WIN32)

macro(IVFAPP_SETUP)
	if(WIN32)
		include_directories(${PROJECT_SOURCE_DIR}/include)
	else(WIN32)
		include_directories(${PROJECT_SOURCE_DIR}/include ${FREETYPE_INCLUDE} ${FREETYPE_CONFIG})
		link_directories(${FREETYPE_LIBS})
	endif(WIN32)

	file(GLOB SOURCE_FILES *.cpp)
	file(GLOB INCLUDE_FILES *.h) 	

	set(EXT_LIBS "")
	set(EXT_DEBUG_LIBS "")

	if(BUILD_SHARED_LIBS)
		if(WIN32)
			add_definitions(-DIVF_DLL -DFL_DLL)
		endif(WIN32)
	else(BUILD_SHARED_LIBS)
		if(WIN32)
			set(EXT_DEBUG_LIBS fltkd fltkgld)
			set(EXT_LIBS fltk fltkgl)
		else(WIN32)
			set(EXT_LIBS fltk fltk_gl)
		endif(WIN32)
	endif(BUILD_SHARED_LIBS)

	if(WIN32)
		if(IVFDEBUG)
			add_executable( ${IVFAPP_NAME}d ${SOURCE_FILES} ${INCLUDE_FILES})
			target_link_libraries( ${IVFAPP_NAME}d ${IVFAPP_DEBUG_LIBS} ${EXT_DEBUG_LIBS})
			install_targets( /bin ${IVFAPP_NAME}d )
		else(IVFDEBUG)
			add_executable(${IVFAPP_NAME} ${SOURCE_FILES} ${INCLUDE_FILES})
			target_link_libraries( ${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS})
			install_targets( /bin ${IVFAPP_NAME} )
		endif(IVFDEBUG)		
	else(WIN32)
		if(APPLE)
                        add_executable(${IVFAPP_NAME} ${SOURCE_FILES})
                        target_link_libraries(${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS} "-framework carbon" "-framework cocoa" "-framework applicationservices" "-framework agl" "-framework opengl" )
                        install_targets( /bin ${IVFAPP_NAME} )
		else(APPLE)
			add_executable(${IVFAPP_NAME} ${SOURCE_FILES})
			target_link_libraries(${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS}) 
			install_targets( /bin ${IVFAPP_NAME} )
		endif(APPLE)
	endif(WIN32)

endmacro(IVFAPP_SETUP)

macro(IVFCONAPP_SETUP)
        if(WIN32)
                include_directories(${PROJECT_SOURCE_DIR}/include)
        else(WIN32)
                include_directories(${PROJECT_SOURCE_DIR}/include ${FREETYPE_INCLUDE})
        endif(WIN32)

        file(GLOB SOURCE_FILES *.cpp)
        file(GLOB INCLUDE_FILES *.h)

        set(EXT_LIBS "")
        set(EXT_DEBUG_LIBS "")

        if(BUILD_SHARED_LIBS)
                if(WIN32)
                        add_definitions(-DIVF_DLL -DFL_DLL)
                endif(WIN32)
        else(BUILD_SHARED_LIBS)
                if(WIN32)
                        set(EXT_DEBUG_LIBS fltkd fltkgld)
                        set(EXT_LIBS fltk fltkgl)
                else(WIN32)
                        set(EXT_LIBS)
                endif(WIN32)
        endif(BUILD_SHARED_LIBS)

        if(WIN32)
                if(IVFDEBUG)
                        add_executable( ${IVFAPP_NAME}d ${SOURCE_FILES} ${INCLUDE_FILES})
                        target_link_libraries( ${IVFAPP_NAME}d ${IVFAPP_DEBUG_LIBS} ${EXT_DEBUG_LIBS})
                        install_targets( /bin ${IVFAPP_NAME}d )
                else(IVFDEBUG)
                        add_executable(${IVFAPP_NAME} ${SOURCE_FILES} ${INCLUDE_FILES})
                        target_link_libraries( ${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS})
                        install_targets( /bin ${IVFAPP_NAME} )
                endif(IVFDEBUG)
        else(WIN32)
                add_executable(${IVFAPP_NAME} ${SOURCE_FILES})
                target_link_libraries(${IVFAPP_NAME} ${IVFAPP_LIBS} ${EXT_LIBS})
                install_targets( /bin ${IVFAPP_NAME} )
        endif(WIN32)

endmacro(IVFCONAPP_SETUP)

subdirs(src include examples utils)