// generated by Fast Light User Interface Designer (fluid) version 1.0104

#ifndef MainFrame_h
#define MainFrame_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include "WorkspaceView.h"
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Output.H>

class CMainFrame : CViewModeChangeEvent, CCoordinateEvent, CSelectionChangedEvent {
public:
  CMainFrame();
  Fl_Double_Window *wndMain;
  CWorkspaceView *workspaceView;
  Fl_Button *btnSelectAll;
private:
  inline void cb_btnSelectAll_i(Fl_Button*, void*);
  static void cb_btnSelectAll(Fl_Button*, void*);
public:
  Fl_Light_Button *btnSelect;
private:
  inline void cb_btnSelect_i(Fl_Light_Button*, void*);
  static void cb_btnSelect(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *btnMove;
private:
  inline void cb_btnMove_i(Fl_Light_Button*, void*);
  static void cb_btnMove(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *btnCopy;
private:
  inline void cb_btnCopy_i(Fl_Light_Button*, void*);
  static void cb_btnCopy(Fl_Light_Button*, void*);
public:
  Fl_Button *btnDelete;
private:
  inline void cb_btnDelete_i(Fl_Button*, void*);
  static void cb_btnDelete(Fl_Button*, void*);
public:
  Fl_Light_Button *btnCreateNodes;
private:
  inline void cb_btnCreateNodes_i(Fl_Light_Button*, void*);
  static void cb_btnCreateNodes(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *btnCreateLines;
private:
  inline void cb_btnCreateLines_i(Fl_Light_Button*, void*);
  static void cb_btnCreateLines(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *btnCreateVectors;
private:
  inline void cb_btnCreateVectors_i(Fl_Light_Button*, void*);
  static void cb_btnCreateVectors(Fl_Light_Button*, void*);
public:
  Fl_Output *outX;
  Fl_Output *outY;
  Fl_Output *outZ;
  Fl_Output *outInfo;
  void show();
  virtual void onViewModeChange(TViewModeEvent newMode);
  virtual void onCoordinate(double x, double y, double z);
  void onSelectionChanged();
};
#endif
